http://softwaretestingfundamentals.com/ - Good Tutorials

Software Testing

Test Scenario:
	•is the hypothetical story to test the particular functionality of an application.
	•It need use cases to test the function
	
Defect
	•The mistakes done at the developer end which produces different result than expected.
	•It is detected and corrected by Developer
Bug
	•Same defect which are detected by tester

	Not sure on these definition , at many places Bugs and Defect are same.
	Rather error are  pre-production and defects are post-production as mentioned in Pressman.

Verification and Validation Model

	•Also, the costs of fixing a defect increase across the development life-cycle. The earlier in life cycle a defect is detected, the cheaper it is to fix it. As they say, "A stitch in time saves nine."

This model is used when requirement are well defined and non-ambiguous
Verifications:
	•is the static analysis technique, where testing is done without executing the code
	•e.g. code inspection,code walk-through, reviews etc
Validation (d for dynamic)
	•Dynamic analysis technique, where code is executed by execution
	•In this V&V model development and QA activities are done simultaneously and testing starts right from requirement phase.
	 and verification and validation activities go hand in hand.
	•Left hand side are dev act and right side are test act
	•requirement analysis -> UAT
	•Design reviews -> system test plan and traceability matrix  : 
	•Architecture diagram is created , their modules and dependencies ->INtegraation test plan 
	•Low level design for function and interfaces are defines-> Unit case testing 
	
	•Unit testing is done to check the desired output of the function written, this is been done majorly by dev team.
	 bugs are logged and tracked.
	•Integration test plan produces integration test cases and track them 
	

Software Testing Life Cycle:
	
	•It is software testing process tat executed in planned and systematic manner to improve the quality of product.
	 that identifies what test activities to carry out and when to accomplish those test activities.
	•RA:QA team figure out the testable requirements. they follow up with stakeholders like Architecture designer, business analyst to get answer for any question.
	•Test Planning: Important phase where test manager figure the cost and effort to be done for commencing the testing.
	•Test Case DEvelopment:	Testing team wrt test case and gather required data and get reviewed by QA lead.
							Requirement traceability matrix is built where each test cases is mapped with the corresponding requirement.
	•Environment Setup : it is an independent activity where testing environment is sets up.
	•Test Execution  : Test case execution started.
	•Test Cycle closure: 

Types of Testing
	•Manual Testing and Automation Testing:
	Challenges with Manual Testing are  : Boring, Error prone, Time consuming, Tedious.

Static Methods of testing are : code inspection , code review 

Testing Methods(dynamic methods):
	•Black Box Testing:Known as Behavioral Testing , s/w test the internal structural, design and implementation and UI and UX of the product being tested.
	•White Box : 	internal structure , login design and implementation of different module.
	•Grey bOx:Only Partly internal structure is known to the tester. Browser F12 developer tool testing.

Functional Testing
	•Describe what the product does
	•Unit testing, Acceptance testing,Smoke Testing,Integration Testing,Regression testing
Non Functional Testing:
	•Performed after Functional Testing
	•Describe how product works
	•Performance testing,Scalability testing,Load testing, Stress Testing
	
	•A load test ensures that a web system is capable of handling an expected volume of traffic, and therefore is sometimes referred to as volume testing
	•A stress test is a test designed to increase the number of simultaneous requests on a system past a point where performance is degraded, 
	possibly even to the point of complete failure.
		 This pushes the system to a state of potential failure to see how the system handles it and whether the system can perform a graceful recovery.
	
Software Testing Level
	•Unit->Integration->System->Acceptance

Software Testing Document and its artifacts:
	•Test Plan: Provide Outline strategy which will be implemented for testing the application.
	•Test Scenario:a single line stmt that notifies the area in which your app will experiment.
	•Test Case: collections of  steps , conditions , inputs and expected outputs which can be implemented
	•Traceability Matrix: that map requirement at SDLC with test cases

Loop testing
	•White box testing , for checking loops

Smoke Testing
	•The term ‘smoke testing’, it is said, came to software testing from a similar type of hardware testing, in which the device passed the test if it did not catch fire (or smoked) the first time it was turned on.
	•Smoke testing covers most of the 'critical' functions of the software but none of them in depth. The result of this test is used to decide whether to proceed with further testing. If the smoke test passes, go ahead with further testing. If it fails, halt further tests and ask for a new build with the required fixes. If an application is badly broken, detailed testing might be a waste of time and effort.
	
Penetration testing:
	•It is security assessment
	•It is simulation of process that hacker would use to launch attack on your website.
	•It is implemented by simulating malicious attacks from an organization's internal and external users to analyses th potential vulnerabilities
	•Network configuration are the most common vulnerabilities found in penetration testing.
	
	
Regression Testing:
	•Regression TESTING is defined as a type of software testing to confirm that a recent program or code change has not adversely affected existing features.
	•Regression [noun] literally means the act of going back to a previous place or state; return or reversion.
	•Regression Testing is nothing but a full or partial selection of already executed test cases which are re-executed to ensure existing functionalities work fine.
	•It is done when, there is 1)New functionality added 2) Change Requirement raised 3)Defect fix occurred.
	
	
Regression Testing Vs Retesting:
	•Retesting is testing the previous raised defect to make sure things are corrected now.
	Ex if tester found a bug in purchase module and posted , he will retest it to confirm.
	•Regression Testing will test the finance module also bcoz it depends on purchase module.
	•retesting done on failed testcases while regression done on past testcases 

Performance tests are often coupled with stress testing and usually require both hardware and software instrumentation

Deployment testing, sometimes called configuration testing, exercises the software in each environment in which it is to operate.

Stubs and Driver
	•Stubs used in Top-Down approach of integration testing.
	•Upper modules are ready for testing but lower modules not yet finished.
	•so lower modules are made as stub to replicate the simulate their effects.
	
	•Driver is the exact opposite case.

	